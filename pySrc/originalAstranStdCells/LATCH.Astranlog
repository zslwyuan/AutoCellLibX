astran> read ./originalAstranStdCells//LATCH.run
-> Reading file: ./originalAstranStdCells//LATCH.run
-> Setting lpsolve executable to: /opt/gurobi950/linux64/bin/gurobi_cl
-> Loading technology from file: ../tools/astran/Astran/build/Work/tech_freePDK45.rul
-> Loading cells netlist from file: ../stdCelllib/cellsAstranFriendly.sp
-> Selecting cell netlist: LATCH
-> Trying with 3 tracks and conservative = 0 ...
-> Calculating cell area...
-> Applying folding...
-> Number of transistors before folding: 12 -> P(6) N(6)
-> Number of transistors after folding: 12 -> P(6) N(6)
-> Placing transistors...
 ( initial cost = 17142 num reps = 5400 problem size = 36 )  Iteration 1; cost = 21186.000 (17142.000); p_cost = 21186.000; accept = 1.000; avg_delta = 0.749; dp = 1708.685; thres = 99999.000; cost_ratio = 1.236; [0]
 Iteration 2; cost = 22049.000 (17142.000); p_cost = 22049.000; accept = 1.000; avg_delta = 0.160; dp = 1663.421; thres = 47999.520; cost_ratio = 1.041; [0]
 Iteration 3; cost = 21639.000 (17142.000); p_cost = 21639.000; accept = 1.000; avg_delta = -0.076; dp = 1699.370; thres = 23039.770; cost_ratio = 0.981; [0]
 Iteration 4; cost = 22031.000 (17142.000); p_cost = 22031.000; accept = 1.000; avg_delta = 0.073; dp = 1688.737; thres = 11059.089; cost_ratio = 1.018; [0]
