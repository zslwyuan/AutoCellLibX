astran> read ./originalAstranStdCells//TBUFX1.run
-> Reading file: ./originalAstranStdCells//TBUFX1.run
-> Setting lpsolve executable to: /opt/gurobi950/linux64/bin/gurobi_cl
-> Loading technology from file: ../tools/astran/Astran/build/Work/tech_freePDK45.rul
-> Loading cells netlist from file: ../stdCelllib/cellsAstranFriendly.sp
-> Selecting cell netlist: TBUFX1
-> Trying with 3 tracks and conservative = 0 ...
-> Calculating cell area...
-> Applying folding...
-> Number of transistors before folding: 6 -> P(3) N(3)
-> Number of transistors after folding: 6 -> P(3) N(3)
-> Placing transistors...
 ( initial cost = 8167 num reps = 1350 problem size = 9 )  Iteration 1; cost = 9819.000 (8167.000); p_cost = 9819.000; accept = 1.000; avg_delta = 1.224; dp = 997.702; thres = 99999.000; cost_ratio = 1.202; [0]
 Iteration 2; cost = 7755.000 (7755.000); p_cost = 7755.000; accept = 1.000; avg_delta = -1.529; dp = 1020.593; thres = 47999.520; cost_ratio = 0.790; [0]
 Iteration 3; cost = 7555.000 (7555.000); p_cost = 7555.000; accept = 1.000; avg_delta = -0.148; dp = 1088.769; thres = 23039.770; cost_ratio = 0.974; [0]
 Iteration 4; cost = 10441.000 (7555.000); p_cost = 10441.000; accept = 1.000; avg_delta = 2.138; dp = 1023.768; thres = 11059.089; cost_ratio = 1.382; [0]
 Iteration 5; cost = 10223.000 (7555.000); p_cost = 10223.000; accept = 1.000; avg_delta = -0.161; dp = 1009.374; thres = 5308.363; cost_ratio = 0.979; [0]
 Iteration 6; cost = 10231.000 (7555.000); p_cost = 10231.000; accept = 0.983; avg_delta = 0.006; dp = 999.411; thres = 2548.014; cost_ratio = 1.001; [0]
 Iteration 7; cost = 5927.000 (5927.000); p_cost = 5927.000; accept = 0.647; avg_delta = -4.924; dp = 1275.020; thres = 1266.088; cost_ratio = 0.579; [0]
 Iteration 8; cost = 5723.000 (5723.000); p_cost = 5723.000; accept = 0.339; avg_delta = -0.445; dp = 783.256; thres = 975.434; cost_ratio = 0.966; [0]
 Iteration 9; cost = 7343.000 (5723.000); p_cost = 7343.000; accept = 0.352; avg_delta = 3.411; dp = 959.593; thres = 899.791; cost_ratio = 1.283; [0]
 Iteration 10; cost = 5723.000 (5723.000); p_cost = 5723.000; accept = 0.301; avg_delta = -3.980; dp = 664.402; thres = 826.098; cost_ratio = 0.779; [0]
 Iteration 11; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.327; avg_delta = 0.462; dp = 534.869; thres = 772.034; cost_ratio = 1.036; [0]
 Iteration 12; cost = 5739.000 (5723.000); p_cost = 5739.000; accept = 0.252; avg_delta = -0.553; dp = 125.198; thres = 715.214; cost_ratio = 0.968; [0]
 Iteration 13; cost = 5739.000 (5723.000); p_cost = 5739.000; accept = 0.230; avg_delta = 0.000; dp = 111.044; thres = 678.227; cost_ratio = 1.000; [1]
 Iteration 14; cost = 5723.000 (5723.000); p_cost = 5723.000; accept = 0.222; avg_delta = -0.053; dp = 189.801; thres = 646.781; cost_ratio = 0.997; [0]
 Iteration 15; cost = 5739.000 (5723.000); p_cost = 5739.000; accept = 0.239; avg_delta = 0.050; dp = 181.252; thres = 617.875; cost_ratio = 1.003; [0]
 Iteration 16; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.277; avg_delta = 0.503; dp = 95.805; thres = 587.942; cost_ratio = 1.033; [0]
 Iteration 17; cost = 5739.000 (5723.000); p_cost = 5739.000; accept = 0.266; avg_delta = -0.524; dp = 175.447; thres = 553.621; cost_ratio = 0.968; [0]
 Iteration 18; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.216; avg_delta = 0.644; dp = 92.548; thres = 522.973; cost_ratio = 1.033; [0]
 Iteration 19; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.237; avg_delta = 0.000; dp = 87.938; thres = 500.281; cost_ratio = 1.000; [1]
 Iteration 20; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.269; avg_delta = 0.000; dp = 97.587; thres = 476.220; cost_ratio = 1.000; [2]
 final cost = 5927 
 ( initial cost = 5723 num reps = 1350 problem size = 9 )  Iteration 1; cost = 11067.000 (5723.000); p_cost = 11067.000; accept = 1.000; avg_delta = 3.959; dp = 1057.747; thres = 99999.000; cost_ratio = 1.934; [0]
 Iteration 2; cost = 8787.000 (5723.000); p_cost = 8787.000; accept = 1.000; avg_delta = -1.689; dp = 960.663; thres = 47999.520; cost_ratio = 0.794; [0]
 Iteration 3; cost = 9310.000 (5723.000); p_cost = 9310.000; accept = 1.000; avg_delta = 0.387; dp = 986.142; thres = 23039.770; cost_ratio = 1.060; [0]
 Iteration 4; cost = 11380.000 (5723.000); p_cost = 11380.000; accept = 1.000; avg_delta = 1.533; dp = 996.493; thres = 11059.089; cost_ratio = 1.222; [0]
 Iteration 5; cost = 10538.000 (5723.000); p_cost = 10538.000; accept = 1.000; avg_delta = -0.624; dp = 1015.036; thres = 5308.363; cost_ratio = 0.926; [0]
 Iteration 6; cost = 10546.000 (5723.000); p_cost = 10546.000; accept = 0.962; avg_delta = 0.006; dp = 1144.407; thres = 2548.014; cost_ratio = 1.001; [0]
 Iteration 7; cost = 5927.000 (5723.000); p_cost = 5927.000; accept = 0.720; avg_delta = -4.752; dp = 1151.845; thres = 1317.487; cost_ratio = 0.562; [0]
