astran> read ./outputs/tc_l4_0427/COMPLEX28.run
-> Reading file: ./outputs/tc_l4_0427/COMPLEX28.run
-> Setting lpsolve executable to: /opt/gurobi950/linux64/bin/gurobi_cl
-> Loading technology from file: ../tools/astran/Astran/build/Work/tech_freePDK45.rul
-> Loading cells netlist from file: ./outputs/tc_l4_0427/COMPLEX28.sp
-> Selecting cell netlist: COMPLEX28
-> Trying with 2 tracks and conservative = 0 ...
-> Calculating cell area...
-> Applying folding...
-> Number of transistors before folding: 48 -> P(24) N(24)
-> Number of transistors after folding: 48 -> P(24) N(24)
-> Placing transistors...
 ( initial cost = 59737 num reps = 86400 problem size = 576 )  Iteration 1; cost = 207161.000 (59737.000); p_cost = 207161.000; accept = 1.000; avg_delta = 1.706; dp = 14032.229; thres = 99999.000; cost_ratio = 3.468; [0]
 Iteration 2; cost = 196163.000 (59737.000); p_cost = 196163.000; accept = 0.998; avg_delta = -0.128; dp = 14079.895; thres = 48000.677; cost_ratio = 0.947; [0]
 Iteration 3; cost = 206430.000 (59737.000); p_cost = 206430.000; accept = 0.932; avg_delta = 0.127; dp = 14087.832; thres = 23129.133; cost_ratio = 1.052; [0]
 Iteration 4; cost = 202637.000 (59737.000); p_cost = 202637.000; accept = 0.707; avg_delta = -0.062; dp = 13794.785; thres = 12618.246; cost_ratio = 0.982; [0]
 Iteration 5; cost = 187225.000 (59737.000); p_cost = 187225.000; accept = 0.530; avg_delta = -0.337; dp = 13781.021; thres = 9212.665; cost_ratio = 0.924; [0]
 Iteration 6; cost = 205884.000 (59737.000); p_cost = 205884.000; accept = 0.442; avg_delta = 0.489; dp = 13245.881; thres = 7734.662; cost_ratio = 1.100; [0]
 Iteration 7; cost = 195930.000 (59737.000); p_cost = 195930.000; accept = 0.382; avg_delta = -0.302; dp = 13076.488; thres = 6825.017; cost_ratio = 0.952; [0]
