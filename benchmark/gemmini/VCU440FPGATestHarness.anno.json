[
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.InterruptBusWrapper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLXbar_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_2"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.PeripheryBus",
    "regMappingSer":{
      "displayName":"PeripheryBus",
      "deviceName":"PeripheryBus",
      "baseAddress":16384,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"unnamedRegField0_8",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"unnamedRegField0_16",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"unnamedRegField0_24",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":32,
          "bitWidth":8,
          "name":"unnamedRegField0_32",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":40,
          "bitWidth":8,
          "name":"unnamedRegField0_40",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":48,
          "bitWidth":8,
          "name":"unnamedRegField0_48",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":56,
          "bitWidth":8,
          "name":"unnamedRegField0_56",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_13"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_5"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.InclusiveCache",
    "regMappingSer":{
      "displayName":"InclusiveCache",
      "deviceName":"InclusiveCache",
      "baseAddress":33619968,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"Banks",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of banks in the cache",
          "group":"Config",
          "groupDesc":"Information about the Cache Configuration",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"Ways",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of ways per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"lgSets",
          "resetValue":10,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the sets per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"lgBlockBytes",
          "resetValue":6,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the bytes per cache block",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200",
          "bitOffset":0,
          "bitWidth":64,
          "name":"Flush64",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the phsyical address equal to the 64-bit written data from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x240",
          "bitOffset":0,
          "bitWidth":32,
          "name":"Flush32",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the physical address equal to the 32-bit written data << 4 from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_1.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_2.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_3.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLFilter"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_15"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLJbar"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_18"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_10"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_12"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>io.cpu.resp"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>io.cpu.s1_data"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":88,
    "depth":64,
    "description":"DCache Tag Array",
    "write_mask_granularity":22
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCacheDataArray.data_arrays_0",
    "address_width":8,
    "name":"data_arrays_0",
    "data_width":256,
    "depth":256,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCacheDataArray.data_arrays_1",
    "address_width":8,
    "name":"data_arrays_1",
    "data_width":256,
    "depth":256,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>s2_valid_cached_miss"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>s2_victim_dirty"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_0"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>instructions_allocated"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>new_entry"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>valids"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>functs"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>issueds"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>packed_deps"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>pop_count_packed_deps"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>min_pop_count"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[3].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[4].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[5].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[6].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[7].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[3].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[4].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[5].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[6].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[7].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[8].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[9].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[10].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[11].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[12].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[13].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[14].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[15].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[3].bits.allocated_at"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdBias.state",
    "enumTypeName":"gemmini.LoopConvLdBias$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdBias$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdBias._state_T_7",
    "enumTypeName":"gemmini.LoopConvLdBias$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdInput.state",
    "enumTypeName":"gemmini.LoopConvLdInput$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdInput$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdInput._state_T_15",
    "enumTypeName":"gemmini.LoopConvLdInput$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdWeight.state",
    "enumTypeName":"gemmini.LoopConvLdWeight$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdWeight$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdWeight._state_T_7",
    "enumTypeName":"gemmini.LoopConvLdWeight$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute.state",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvExecute$State",
    "definition":{
      "idle":0,
      "config":1,
      "pre":2,
      "comp":3
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute._state_T_13",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute._state_T_14",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt.state",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvSt$State",
    "definition":{
      "st":1,
      "pre_pool_config":2,
      "post_pool_config":4,
      "pool":3,
      "idle":0
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_7",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_11",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_12",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdA.state",
    "enumTypeName":"gemmini.LoopMatmulLdA$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdA$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdB.state",
    "enumTypeName":"gemmini.LoopMatmulLdB$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdB$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdD.state",
    "enumTypeName":"gemmini.LoopMatmulLdD$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdD$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulExecute.state",
    "enumTypeName":"gemmini.LoopMatmulExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulExecute$State",
    "definition":{
      "idle":0,
      "pre":1,
      "comp":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulExecute._state_T_5",
    "enumTypeName":"gemmini.LoopMatmulExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulStC.state",
    "enumTypeName":"gemmini.LoopMatmulStC$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulStC$State",
    "definition":{
      "idle":0,
      "st":1
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|LoopMatmul>loops_configured"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController.control_state",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.StoreController$State",
    "definition":{
      "waiting_for_command":0,
      "waiting_for_dma_req_ready":1,
      "sending_rows":2,
      "pooling":3
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController.next_state",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController._control_state_T_1",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController._control_state_T_2",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller.state",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.TransposePreloadUnroller$State",
    "definition":{
      "idle":0,
      "first_compute":1,
      "second_preload":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller._state_T_3",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller._state_T_4",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|MeshWithDelays>out_matmul_id"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>io.im2col.req.ready"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>read_a_4"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>complete_bits_count"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|Im2Col>im2col_spad_bank"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ICache>s1_hit"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":84,
    "depth":64,
    "description":"ICache Tag Array",
    "write_mask_granularity":21
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_0",
    "address_width":8,
    "name":"data_arrays_0",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_1",
    "address_width":8,
    "name":"data_arrays_1",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_2",
    "address_width":8,
    "name":"data_arrays_2",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_3",
    "address_width":8,
    "name":"data_arrays_3",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BTBParams",
    "params":{
      "nPages":6,
      "nMatchBits":14,
      "nEntries":28,
      "bhtParams":{
        "nEntries":512,
        "counterLength":1,
        "historyLength":8,
        "historyBits":3
      },
      "nRAS":6,
      "updatesOutOfOrder":false
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BHTParams",
    "params":{
      "nEntries":512,
      "counterLength":1,
      "historyLength":8,
      "historyBits":3
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_8"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile.bundleOut_0_5.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "definition":{
      "ITBrNTaken":4,
      "ITBrTaken":5,
      "ITReserved7":7,
      "ITExcReturn":3,
      "ITInterrupt":2,
      "ITException":1,
      "ITCoSwap":12,
      "ITUnCall":8,
      "ITReserved6":6,
      "ITNothing":0,
      "ITReturn":13,
      "ITInTail":11,
      "ITInCall":9,
      "ITInJump":15,
      "ITUnJump":14,
      "ITUnTail":10
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile.auto.trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPUFMAPipe"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPToInt"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.IntToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPUFMAPipe_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.PTW.l2_tlb_ram",
    "address_width":10,
    "name":"l2_tlb_ram",
    "data_width":44,
    "depth":1024,
    "description":"L2 TLB",
    "write_mask_granularity":44
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile",
    "paramsClassName":"freechips.rocketchip.tile.RocketTileParams",
    "params":{
      "name":"tile",
      "dataScratchpadBytes":0,
      "btb":{
        "nEntries":28,
        "nMatchBits":14,
        "nPages":6,
        "nRAS":6,
        "bhtParams":{
          "nEntries":512,
          "counterLength":1,
          "historyLength":8,
          "historyBits":3
        },
        "updatesOutOfOrder":false
      },
      "hartId":0,
      "icache":{
        "nSets":64,
        "nWays":4,
        "rowBits":128,
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "cacheIdBits":0,
        "tagECC":"identity",
        "dataECC":"identity",
        "prefetch":false,
        "blockBytes":64,
        "latency":2,
        "fetchBytes":4
      },
      "boundaryBuffers":false,
      "core":{
        "bootFreqHz":0,
        "useVM":true,
        "useUser":false,
        "useSupervisor":false,
        "useHypervisor":false,
        "useDebug":true,
        "useAtomics":true,
        "useAtomicsOnlyForIO":false,
        "useCompressed":true,
        "useRVE":false,
        "useSCIE":false,
        "nLocalInterrupts":0,
        "useNMI":false,
        "nBreakpoints":1,
        "useBPWatch":false,
        "mcontextWidth":0,
        "scontextWidth":0,
        "nPMPs":8,
        "nPerfCounters":0,
        "haveBasicCounters":true,
        "haveCFlush":false,
        "misaWritable":true,
        "nL2TLBEntries":1024,
        "nL2TLBWays":1,
        "nPTECacheEntries":8,
        "mtvecInit":0,
        "mtvecWritable":true,
        "fastLoadWord":true,
        "fastLoadByte":false,
        "branchPredictionModeCSR":false,
        "clockGate":false,
        "mvendorid":0,
        "mimpid":538447876,
        "mulDiv":{
          "mulUnroll":1,
          "divUnroll":1,
          "mulEarlyOut":false,
          "divEarlyOut":false,
          "divEarlyOutGranularity":1
        },
        "fpu":{
          "minFLen":32,
          "fLen":64,
          "divSqrt":true,
          "sfmaLatency":3,
          "dfmaLatency":4
        }
      },
      "dcache":{
        "nSets":64,
        "nWays":4,
        "rowBits":128,
        "replacementPolicy":"random",
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "tagECC":"identity",
        "dataECC":"identity",
        "dataECCBytes":1,
        "nMSHRs":0,
        "nSDQ":17,
        "nRPQ":16,
        "nMMIOs":1,
        "blockBytes":64,
        "separateUncachedResp":false,
        "acquireBeforeRelease":false,
        "pipelineWayMux":false,
        "clockGate":false
      },
      "clockSinkParams":{
        "phaseDeg":0.0,
        "phaseErrorDeg":5.0,
        "freqErrorPPM":10000.0,
        "jitterPS":200.0
      }
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_1",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.TileResetDomain.auto.tile_trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TileResetDomain"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_19"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_21"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_13"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14.inputs_0.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14.auto.in.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.TLPLIC",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.PLICParams",
    "params":{
      "baseAddress":201326592,
      "maxPriorities":7,
      "intStages":0,
      "maxHarts":15872
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLPLIC",
    "regMappingSer":{
      "displayName":"TLPLIC",
      "deviceName":"TLPLIC",
      "baseAddress":201326592,
      "regFields":[
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority_1",
          "groupDesc":"Acting priority of interrupt source 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 2",
          "group":"priority_2",
          "groupDesc":"Acting priority of interrupt source 2",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"pending_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_1",
          "groupDesc":"Enable bits for each interrupt source for target 1. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 1. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.CLINT",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.CLINTParams",
    "params":{
      "baseAddress":33554432,
      "intStages":0
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.CLINT",
    "regMappingSer":{
      "displayName":"CLINT",
      "deviceName":"CLINT",
      "baseAddress":33554432,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"msip",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtimecmp_0_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"MTIMECMP for hart 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtimecmp_0_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtimecmp_0_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtimecmp_0_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtimecmp_0_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtimecmp_0_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtimecmp_0_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtimecmp_0_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtime_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtime_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtime_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtime_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtime_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtime_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtime_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtime_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|BundleBridgeNexus_15>outputs_0"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_16"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_23"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_2",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLUART",
    "regMappingSer":{
      "displayName":"TLUART",
      "deviceName":"TLUART",
      "baseAddress":1677721600,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit enable",
          "group":"txctrl",
          "groupDesc":"Serial transmit control",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":1,
          "bitWidth":1,
          "name":"nstop",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of stop bits",
          "group":"txctrl",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"rxen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive enable",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa",
          "bitOffset":0,
          "bitWidth":4,
          "name":"txcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xe",
          "bitOffset":0,
          "bitWidth":4,
          "name":"rxcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"Serial interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"Serial interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":16,
          "name":"div",
          "resetValue":868,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Baud rate divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_24"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLSPI",
    "regMappingSer":{
      "displayName":"TLSPI",
      "deviceName":"TLSPI",
      "baseAddress":1677725696,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":12,
          "name":"sckdiv",
          "resetValue":3,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"sckmode_pha",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock phase",
          "group":"sckmode",
          "groupDesc":"Serial clock mode",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":1,
          "bitWidth":1,
          "name":"sckmode_pol",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock polarity",
          "group":"sckmode",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"csid",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select id",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"csdef0",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select 0 default",
          "group":"csdef",
          "groupDesc":"Chip select default",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":2,
          "name":"csmode",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select mode",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x28",
          "bitOffset":0,
          "bitWidth":8,
          "name":"cssck",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"CS to SCK delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2a",
          "bitOffset":0,
          "bitWidth":8,
          "name":"sckcs",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SCK to CS delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2c",
          "bitOffset":0,
          "bitWidth":8,
          "name":"intercs",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Minimum CS inactive time",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2e",
          "bitOffset":0,
          "bitWidth":8,
          "name":"interxfr",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Minimum interframe delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":0,
          "bitWidth":2,
          "name":"proto",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI Protocol",
          "group":"fmt",
          "groupDesc":"Serial frame format",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":2,
          "bitWidth":1,
          "name":"endian",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI Endianness",
          "group":"fmt",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":3,
          "bitWidth":1,
          "name":"iodir",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI I/O Direction",
          "group":"fmt",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x42",
          "bitOffset":0,
          "bitWidth":4,
          "name":"len",
          "resetValue":8,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of bits per frame",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x50",
          "bitOffset":0,
          "bitWidth":4,
          "name":"txmark",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x54",
          "bitOffset":0,
          "bitWidth":4,
          "name":"rxmark",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x70",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"SPI interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x70",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x74",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"SPI interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x74",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x38",
          "bitOffset":0,
          "bitWidth":12,
          "name":"extradel_coarse",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Coarse grain sample delay",
          "group":"extradel",
          "groupDesc":"delay from the sck edge",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x38",
          "bitOffset":12,
          "bitWidth":0,
          "name":"extradel_fine",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Fine grain sample delay",
          "group":"extradel",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x3c",
          "bitOffset":0,
          "bitWidth":5,
          "name":"sampledel_sd",
          "resetValue":3,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of delay stages from slave to the SPI controller",
          "group":"sampledel",
          "groupDesc":"Number of delay stages from slave to SPI controller",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TileClockGater",
    "regMappingSer":{
      "displayName":"TileClockGater",
      "deviceName":"TileClockGater",
      "baseAddress":1048576,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField4_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField8_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegFieldc_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField10_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField14_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField18_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TileResetSetter",
    "regMappingSer":{
      "displayName":"TileResetSetter",
      "deviceName":"TileResetSetter",
      "baseAddress":1114112,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"VCU440FPGATestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":1677721600,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@64000000"
        ]
      },
      {
        "range":{
          "base":1677725696,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "spi@64001000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":2147483648
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"VCU440FPGATestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":1677721600,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@64000000"
        ]
      },
      {
        "range":{
          "base":1677725696,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "spi@64001000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":2147483648
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_6"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.ClockDividerN",
    "name":"ClockDividerN.sv",
    "text":"// See LICENSE for license details.\n\n/**\n  * An unsynthesizable divide-by-N clock divider.\n  * Duty cycle is 100 * (ceil(DIV / 2)) / DIV.\n  */\n\nmodule ClockDividerN #(parameter DIV = 1)(output logic clk_out = 1'b0, input clk_in);\n\n    localparam CWIDTH = $clog2(DIV);\n    localparam LOW_CYCLES = DIV / 2;\n    localparam HIGH_TRANSITION = LOW_CYCLES - 1;\n    localparam LOW_TRANSITION = DIV - 1;\n\n    generate\n        if (DIV == 1) begin\n            // This needs to be procedural because of the assignment on declaration\n            always @(clk_in) begin\n                clk_out = clk_in;\n            end\n        end else begin\n            reg [CWIDTH - 1: 0] count = HIGH_TRANSITION[CWIDTH-1:0];\n            // The blocking assignment to clock out is used to conform what was done\n            // in RC's clock dividers.\n            // It should have the effect of preventing registers in the divided clock\n            // domain latching register updates launched by the fast clock-domain edge\n            // that occurs at the same simulated time (as the divided clock edge).\n            always @(posedge clk_in) begin\n                if (count == LOW_TRANSITION[CWIDTH-1:0]) begin\n                    clk_out = 1'b0;\n                    count <= '0;\n                end\n                else begin\n                    if (count == HIGH_TRANSITION[CWIDTH-1:0]) begin\n                        clk_out = 1'b1;\n                    end\n                    count <= count + 1'b1;\n                end\n            end\n        end\n    endgenerate\nendmodule // ClockDividerN\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell_1",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell_2",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.AnalogToUInt_1",
    "name":"AnalogToUInt_1.v",
    "text":"module AnalogToUInt_1 (a, b);\n  inout [0:0] a;\n  output [0:0] b;\n  assign b = a;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_1",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_2",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_3",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.AnalogToUInt_1_1",
    "name":"AnalogToUInt_1.v",
    "text":"module AnalogToUInt_1 (a, b);\n  inout [0:0] a;\n  output [0:0] b;\n  assign b = a;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_3",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.stage.RunFirrtlTransformAnnotation",
    "transform":"firrtl.transforms.BlackBoxSourceHelper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.InterruptBusWrapper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLXbar_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_2"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.PeripheryBus",
    "regMappingSer":{
      "displayName":"PeripheryBus",
      "deviceName":"PeripheryBus",
      "baseAddress":16384,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"unnamedRegField0_8",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"unnamedRegField0_16",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"unnamedRegField0_24",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":32,
          "bitWidth":8,
          "name":"unnamedRegField0_32",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":40,
          "bitWidth":8,
          "name":"unnamedRegField0_40",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":48,
          "bitWidth":8,
          "name":"unnamedRegField0_48",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":56,
          "bitWidth":8,
          "name":"unnamedRegField0_56",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_13"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroupAggregator_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_5"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.InclusiveCache",
    "regMappingSer":{
      "displayName":"InclusiveCache",
      "deviceName":"InclusiveCache",
      "baseAddress":33619968,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"Banks",
          "resetValue":4,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of banks in the cache",
          "group":"Config",
          "groupDesc":"Information about the Cache Configuration",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"Ways",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of ways per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"lgSets",
          "resetValue":10,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the sets per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"lgBlockBytes",
          "resetValue":6,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the bytes per cache block",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200",
          "bitOffset":0,
          "bitWidth":64,
          "name":"Flush64",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the phsyical address equal to the 64-bit written data from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x240",
          "bitOffset":0,
          "bitWidth":32,
          "name":"Flush32",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the physical address equal to the 32-bit written data << 4 from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_1.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_1.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_2.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_2.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.Directory_3.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":136,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":17
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_0",
    "address_width":13,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_1",
    "address_width":13,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_2",
    "address_width":13,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_3",
    "address_width":13,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_4",
    "address_width":13,
    "name":"cc_banks_4",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_5",
    "address_width":13,
    "name":"cc_banks_5",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_6",
    "address_width":13,
    "name":"cc_banks_6",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.BankedStore_3.cc_banks_7",
    "address_width":13,
    "name":"cc_banks_7",
    "data_width":64,
    "depth":8192,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLFilter"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_15"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLJbar"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLInterconnectCoupler_18"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_10"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_12"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>io.cpu.resp"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>io.cpu.s1_data"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":88,
    "depth":64,
    "description":"DCache Tag Array",
    "write_mask_granularity":22
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCacheDataArray.data_arrays_0",
    "address_width":8,
    "name":"data_arrays_0",
    "data_width":256,
    "depth":256,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.DCacheDataArray.data_arrays_1",
    "address_width":8,
    "name":"data_arrays_1",
    "data_width":256,
    "depth":256,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.DCacheModuleImpl_Anon_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>s2_valid_cached_miss"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|DCache>s2_victim_dirty"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_0"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_1"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|StreamWriter>write_packets_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>instructions_allocated"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>new_entry"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>valids"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>functs"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>issueds"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>packed_deps"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>pop_count_packed_deps"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>min_pop_count"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[3].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[4].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[5].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[6].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ld[7].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[3].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[4].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[5].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[6].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[7].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[8].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[9].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[10].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[11].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[12].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[13].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[14].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_ex[15].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[0].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[1].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[2].bits.allocated_at"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ReservationStation>entries_st[3].bits.allocated_at"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdBias.state",
    "enumTypeName":"gemmini.LoopConvLdBias$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdBias$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdBias._state_T_7",
    "enumTypeName":"gemmini.LoopConvLdBias$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdInput.state",
    "enumTypeName":"gemmini.LoopConvLdInput$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdInput$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdInput._state_T_15",
    "enumTypeName":"gemmini.LoopConvLdInput$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdWeight.state",
    "enumTypeName":"gemmini.LoopConvLdWeight$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvLdWeight$State",
    "definition":{
      "idle":0,
      "config":1,
      "ld":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvLdWeight._state_T_7",
    "enumTypeName":"gemmini.LoopConvLdWeight$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute.state",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvExecute$State",
    "definition":{
      "idle":0,
      "config":1,
      "pre":2,
      "comp":3
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute._state_T_13",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvExecute._state_T_14",
    "enumTypeName":"gemmini.LoopConvExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt.state",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopConvSt$State",
    "definition":{
      "st":1,
      "pre_pool_config":2,
      "post_pool_config":4,
      "pool":3,
      "idle":0
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_7",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_11",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopConvSt._state_T_12",
    "enumTypeName":"gemmini.LoopConvSt$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdA.state",
    "enumTypeName":"gemmini.LoopMatmulLdA$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdA$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdB.state",
    "enumTypeName":"gemmini.LoopMatmulLdB$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdB$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulLdD.state",
    "enumTypeName":"gemmini.LoopMatmulLdD$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulLdD$State",
    "definition":{
      "idle":0,
      "ld":1
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulExecute.state",
    "enumTypeName":"gemmini.LoopMatmulExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulExecute$State",
    "definition":{
      "idle":0,
      "pre":1,
      "comp":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulExecute._state_T_5",
    "enumTypeName":"gemmini.LoopMatmulExecute$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.LoopMatmulStC.state",
    "enumTypeName":"gemmini.LoopMatmulStC$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.LoopMatmulStC$State",
    "definition":{
      "idle":0,
      "st":1
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|LoopMatmul>loops_configured"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController.control_state",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.StoreController$State",
    "definition":{
      "waiting_for_command":0,
      "waiting_for_dma_req_ready":1,
      "sending_rows":2,
      "pooling":3
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController.next_state",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController._control_state_T_1",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.StoreController._control_state_T_2",
    "enumTypeName":"gemmini.StoreController$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller.state",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"gemmini.TransposePreloadUnroller$State",
    "definition":{
      "idle":0,
      "first_compute":1,
      "second_preload":2
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller._state_T_3",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumComponentAnnotation",
    "target":"VCU440FPGATestHarness.TransposePreloadUnroller._state_T_4",
    "enumTypeName":"gemmini.TransposePreloadUnroller$State"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|MeshWithDelays>out_matmul_id"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>io.im2col.req.ready"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>read_a_4"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ExecuteController>complete_bits_count"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|Im2Col>im2col_spad_bank"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|ICache>s1_hit"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":84,
    "depth":64,
    "description":"ICache Tag Array",
    "write_mask_granularity":21
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_0",
    "address_width":8,
    "name":"data_arrays_0",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_1",
    "address_width":8,
    "name":"data_arrays_1",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_2",
    "address_width":8,
    "name":"data_arrays_2",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.ICache.data_arrays_3",
    "address_width":8,
    "name":"data_arrays_3",
    "data_width":128,
    "depth":256,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BTBParams",
    "params":{
      "nPages":6,
      "nMatchBits":14,
      "nEntries":28,
      "bhtParams":{
        "nEntries":512,
        "counterLength":1,
        "historyLength":8,
        "historyBits":3
      },
      "nRAS":6,
      "updatesOutOfOrder":false
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BHTParams",
    "params":{
      "nEntries":512,
      "counterLength":1,
      "historyLength":8,
      "historyBits":3
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLWidthWidget_8"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile.bundleOut_0_5.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "definition":{
      "ITBrNTaken":4,
      "ITBrTaken":5,
      "ITReserved7":7,
      "ITExcReturn":3,
      "ITInterrupt":2,
      "ITException":1,
      "ITCoSwap":12,
      "ITUnCall":8,
      "ITReserved6":6,
      "ITNothing":0,
      "ITReturn":13,
      "ITInTail":11,
      "ITInCall":9,
      "ITInJump":15,
      "ITUnJump":14,
      "ITUnTail":10
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile.auto.trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPUFMAPipe"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPToInt"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.IntToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"VCU440FPGATestHarness.FPUFMAPipe_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"VCU440FPGATestHarness.PTW.l2_tlb_ram",
    "address_width":10,
    "name":"l2_tlb_ram",
    "data_width":44,
    "depth":1024,
    "description":"L2 TLB",
    "write_mask_granularity":44
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.RocketTile",
    "paramsClassName":"freechips.rocketchip.tile.RocketTileParams",
    "params":{
      "name":"tile",
      "dataScratchpadBytes":0,
      "btb":{
        "nEntries":28,
        "nMatchBits":14,
        "nPages":6,
        "nRAS":6,
        "bhtParams":{
          "nEntries":512,
          "counterLength":1,
          "historyLength":8,
          "historyBits":3
        },
        "updatesOutOfOrder":false
      },
      "hartId":0,
      "icache":{
        "nSets":64,
        "nWays":4,
        "rowBits":128,
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "cacheIdBits":0,
        "tagECC":"identity",
        "dataECC":"identity",
        "prefetch":false,
        "blockBytes":64,
        "latency":2,
        "fetchBytes":4
      },
      "boundaryBuffers":false,
      "core":{
        "bootFreqHz":0,
        "useVM":true,
        "useUser":false,
        "useSupervisor":false,
        "useHypervisor":false,
        "useDebug":true,
        "useAtomics":true,
        "useAtomicsOnlyForIO":false,
        "useCompressed":true,
        "useRVE":false,
        "useSCIE":false,
        "nLocalInterrupts":0,
        "useNMI":false,
        "nBreakpoints":1,
        "useBPWatch":false,
        "mcontextWidth":0,
        "scontextWidth":0,
        "nPMPs":8,
        "nPerfCounters":0,
        "haveBasicCounters":true,
        "haveCFlush":false,
        "misaWritable":true,
        "nL2TLBEntries":1024,
        "nL2TLBWays":1,
        "nPTECacheEntries":8,
        "mtvecInit":0,
        "mtvecWritable":true,
        "fastLoadWord":true,
        "fastLoadByte":false,
        "branchPredictionModeCSR":false,
        "clockGate":false,
        "mvendorid":0,
        "mimpid":538447876,
        "mulDiv":{
          "mulUnroll":1,
          "divUnroll":1,
          "mulEarlyOut":false,
          "divEarlyOut":false,
          "divEarlyOutGranularity":1
        },
        "fpu":{
          "minFLen":32,
          "fLen":64,
          "divSqrt":true,
          "sfmaLatency":3,
          "dfmaLatency":4
        }
      },
      "dcache":{
        "nSets":64,
        "nWays":4,
        "rowBits":128,
        "replacementPolicy":"random",
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "tagECC":"identity",
        "dataECC":"identity",
        "dataECCBytes":1,
        "nMSHRs":0,
        "nSDQ":17,
        "nRPQ":16,
        "nMMIOs":1,
        "blockBytes":64,
        "separateUncachedResp":false,
        "acquireBeforeRelease":false,
        "pipelineWayMux":false,
        "clockGate":false
      },
      "clockSinkParams":{
        "phaseDeg":0.0,
        "phaseErrorDeg":5.0,
        "freqErrorPPM":10000.0,
        "jitterPS":200.0
      }
    }
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_1",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.TileResetDomain.auto.tile_trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TileResetDomain"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.FixedClockBroadcast_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_19"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_21"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_13"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14.inputs_0.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14.auto.in.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_14"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.TLPLIC",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.PLICParams",
    "params":{
      "baseAddress":201326592,
      "maxPriorities":7,
      "intStages":0,
      "maxHarts":15872
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLPLIC",
    "regMappingSer":{
      "displayName":"TLPLIC",
      "deviceName":"TLPLIC",
      "baseAddress":201326592,
      "regFields":[
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority_1",
          "groupDesc":"Acting priority of interrupt source 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 2",
          "group":"priority_2",
          "groupDesc":"Acting priority of interrupt source 2",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"pending_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_1",
          "groupDesc":"Enable bits for each interrupt source for target 1. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 1. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"VCU440FPGATestHarness.CLINT",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.CLINTParams",
    "params":{
      "baseAddress":33554432,
      "intStages":0
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.CLINT",
    "regMappingSer":{
      "displayName":"CLINT",
      "deviceName":"CLINT",
      "baseAddress":33554432,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"msip",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtimecmp_0_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"MTIMECMP for hart 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtimecmp_0_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtimecmp_0_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtimecmp_0_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtimecmp_0_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtimecmp_0_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtimecmp_0_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtimecmp_0_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtime_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtime_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtime_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtime_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtime_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtime_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtime_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtime_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~VCU440FPGATestHarness|BundleBridgeNexus_15>outputs_0"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.BundleBridgeNexus_16"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_23"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_2",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLUART",
    "regMappingSer":{
      "displayName":"TLUART",
      "deviceName":"TLUART",
      "baseAddress":1677721600,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit enable",
          "group":"txctrl",
          "groupDesc":"Serial transmit control",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":1,
          "bitWidth":1,
          "name":"nstop",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of stop bits",
          "group":"txctrl",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"rxen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive enable",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa",
          "bitOffset":0,
          "bitWidth":4,
          "name":"txcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xe",
          "bitOffset":0,
          "bitWidth":4,
          "name":"rxcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"Serial interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"Serial interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":16,
          "name":"div",
          "resetValue":868,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Baud rate divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.TLBuffer_24"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TLSPI",
    "regMappingSer":{
      "displayName":"TLSPI",
      "deviceName":"TLSPI",
      "baseAddress":1677725696,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":12,
          "name":"sckdiv",
          "resetValue":3,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"sckmode_pha",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock phase",
          "group":"sckmode",
          "groupDesc":"Serial clock mode",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":1,
          "bitWidth":1,
          "name":"sckmode_pol",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Serial clock polarity",
          "group":"sckmode",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"csid",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select id",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"csdef0",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select 0 default",
          "group":"csdef",
          "groupDesc":"Chip select default",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":2,
          "name":"csmode",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Chip select mode",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x28",
          "bitOffset":0,
          "bitWidth":8,
          "name":"cssck",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"CS to SCK delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2a",
          "bitOffset":0,
          "bitWidth":8,
          "name":"sckcs",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SCK to CS delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2c",
          "bitOffset":0,
          "bitWidth":8,
          "name":"intercs",
          "resetValue":1,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Minimum CS inactive time",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2e",
          "bitOffset":0,
          "bitWidth":8,
          "name":"interxfr",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Minimum interframe delay",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":0,
          "bitWidth":2,
          "name":"proto",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI Protocol",
          "group":"fmt",
          "groupDesc":"Serial frame format",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":2,
          "bitWidth":1,
          "name":"endian",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI Endianness",
          "group":"fmt",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x40",
          "bitOffset":3,
          "bitWidth":1,
          "name":"iodir",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"SPI I/O Direction",
          "group":"fmt",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x42",
          "bitOffset":0,
          "bitWidth":4,
          "name":"len",
          "resetValue":8,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of bits per frame",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x48",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4c",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x50",
          "bitOffset":0,
          "bitWidth":4,
          "name":"txmark",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x54",
          "bitOffset":0,
          "bitWidth":4,
          "name":"rxmark",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x70",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"SPI interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x70",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x74",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"SPI interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x74",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x38",
          "bitOffset":0,
          "bitWidth":12,
          "name":"extradel_coarse",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Coarse grain sample delay",
          "group":"extradel",
          "groupDesc":"delay from the sck edge",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x38",
          "bitOffset":12,
          "bitWidth":0,
          "name":"extradel_fine",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Fine grain sample delay",
          "group":"extradel",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x3c",
          "bitOffset":0,
          "bitWidth":5,
          "name":"sampledel_sd",
          "resetValue":3,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of delay stages from slave to the SPI controller",
          "group":"sampledel",
          "groupDesc":"Number of delay stages from slave to SPI controller",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TileClockGater",
    "regMappingSer":{
      "displayName":"TileClockGater",
      "deviceName":"TileClockGater",
      "baseAddress":1048576,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField4_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField8_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegFieldc_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField10_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField14_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField18_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"VCU440FPGATestHarness.TileResetSetter",
    "regMappingSer":{
      "displayName":"TileResetSetter",
      "deviceName":"TileResetSetter",
      "baseAddress":1114112,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"VCU440FPGATestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":1677721600,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@64000000"
        ]
      },
      {
        "range":{
          "base":1677725696,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "spi@64001000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":2147483648
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"VCU440FPGATestHarness.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":16384,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "boot-address-reg@4000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":1048576,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clock-gater@100000"
        ]
      },
      {
        "range":{
          "base":1114112,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "tile-reset-setter@110000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":1677721600,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@64000000"
        ]
      },
      {
        "range":{
          "base":1677725696,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "spi@64001000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":2147483648
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"VCU440FPGATestHarness.ClockGroup_6"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.ClockDividerN",
    "name":"ClockDividerN.sv",
    "text":"// See LICENSE for license details.\n\n/**\n  * An unsynthesizable divide-by-N clock divider.\n  * Duty cycle is 100 * (ceil(DIV / 2)) / DIV.\n  */\n\nmodule ClockDividerN #(parameter DIV = 1)(output logic clk_out = 1'b0, input clk_in);\n\n    localparam CWIDTH = $clog2(DIV);\n    localparam LOW_CYCLES = DIV / 2;\n    localparam HIGH_TRANSITION = LOW_CYCLES - 1;\n    localparam LOW_TRANSITION = DIV - 1;\n\n    generate\n        if (DIV == 1) begin\n            // This needs to be procedural because of the assignment on declaration\n            always @(clk_in) begin\n                clk_out = clk_in;\n            end\n        end else begin\n            reg [CWIDTH - 1: 0] count = HIGH_TRANSITION[CWIDTH-1:0];\n            // The blocking assignment to clock out is used to conform what was done\n            // in RC's clock dividers.\n            // It should have the effect of preventing registers in the divided clock\n            // domain latching register updates launched by the fast clock-domain edge\n            // that occurs at the same simulated time (as the divided clock edge).\n            always @(posedge clk_in) begin\n                if (count == LOW_TRANSITION[CWIDTH-1:0]) begin\n                    clk_out = 1'b0;\n                    count <= '0;\n                end\n                else begin\n                    if (count == HIGH_TRANSITION[CWIDTH-1:0]) begin\n                        clk_out = 1'b1;\n                    end\n                    count <= count + 1'b1;\n                end\n            end\n        end\n    endgenerate\nendmodule // ClockDividerN\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell_1",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.GenericDigitalInIOCell_2",
    "name":"IOCell.v",
    "text":"// See LICENSE for license details\n\n`timescale 1ns/1ps\n\nmodule GenericAnalogIOCell(\n    inout pad,\n    inout core\n);\n\n    assign core = 1'bz;\n    assign pad = core;\n\nendmodule\n\nmodule GenericDigitalGPIOCell(\n    inout pad,\n    output i,\n    input ie,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule\n\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.AnalogToUInt_1",
    "name":"AnalogToUInt_1.v",
    "text":"module AnalogToUInt_1 (a, b);\n  inout [0:0] a;\n  output [0:0] b;\n  assign b = a;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_1",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_2",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.UIntToAnalog_1_3",
    "name":"UIntToAnalog_1.v",
    "text":"module UIntToAnalog_1 (a, b, b_en);\n  inout [0:0] a;\n  input [0:0] b;\n  input b_en;\n  assign a = b_en ? b : 1'bz;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.AnalogToUInt_1_1",
    "name":"AnalogToUInt_1.v",
    "text":"module AnalogToUInt_1 (a, b);\n  inout [0:0] a;\n  output [0:0] b;\n  assign b = a;\nendmodule\n"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"VCU440FPGATestHarness.plusarg_reader_3",
    "name":"plusarg_reader.v",
    "text":"// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class":"firrtl.stage.RunFirrtlTransformAnnotation",
    "transform":"firrtl.transforms.BlackBoxSourceHelper"
  }
]